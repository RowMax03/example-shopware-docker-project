name: Build Docker Image

on:
  workflow_dispatch:  
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    uses: shopware/github-actions/.github/workflows/build-docker-image.yml@main
    with:
      bun-version: '1.0.22'
    secrets:
      ghToken: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    env:
      SERVER_IP: '128.140.127.163'
      COMPOSE_PROJECT_NAME: shopware
      COMPOSE_FILE: docker-compose.prod.yml
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Scan Host
        run: ssh-keyscan "$SERVER_IP" >> ~/.ssh/known_hosts

      - name: Add to Docker
        run: |
          docker context create server --docker "host=ssh://root@$SERVER_IP"
          docker context use server

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/rowmax03/shopver-example
          tags: latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
    
      - name: Pull Image
        run: docker pull $(cat /tmp/steps.meta.outputs.tags)

      - name: Start Services
        run: |
          export MYSQL_PASSWORD_ESCAPED=$(php -r 'echo rawurlencode($_SERVER["MYSQL_PASSWORD"]);')
          docker compose up -d init
          docker compose up -d
        env:
          APP_SECRET: ${{ secrets.APP_SECRET }}
          INSTANCE_ID: ${{ secrets.INSTANCE_ID }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

      - name: Show Logs
        if: always()
        run: docker logs shopware-init-1
